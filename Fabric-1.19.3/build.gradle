plugins {
	id "fabric-loom" version "1.0.17"
}

ext.gimmeJava(17)

archivesBaseName = "${rootProject.name}-fabric-1.19.3-please-play-1.19.2-instead"

dependencies {
	//Minecraft
	minecraft "com.mojang:minecraft:1.19.3"
	mappings loom.officialMojangMappings()
	
	//Fabric loader
	modImplementation "net.fabricmc:fabric-loader:0.14.12"
	
	//Fabric API
	modImplementation fabricApi.module("fabric-resource-loader-v0", "0.72.0+1.19.3")
	modImplementation fabricApi.module("fabric-lifecycle-events-v1", "0.72.0+1.19.3")
	modImplementation fabricApi.module("fabric-command-api-v2", "0.72.0+1.19.3")
	
	//Xplat
	implementation project(":Xplat-1.19.3")
	implementation project(":CrummyConfig")
	implementation project(":Core")
}

//fold in xplat resources and sources
processResources {
	from project(":Xplat-1.19.3").sourceSets.main.resources
	from project(":CrummyConfig").sourceSets.main.resources
	from project(":Core").sourceSets.main.resources
}

tasks.withType(JavaCompile) {
	source(project(":Xplat-1.19.3").sourceSets.main.allSource)
	source(project(":CrummyConfig").sourceSets.main.allSource)
	source(project(":Core").sourceSets.main.allSource)
}

//loom doesn't generate run configs by default in subprojects
loom {
	runs {
		client {
			client()
			setConfigName("Fabric 1.19.3 Client")
			ideConfigGenerated(true)
			runDir("./run")
		}
		server {
			server()
			setConfigName("Fabric 1.19.3 Server")
			ideConfigGenerated(true)
			runDir("./run")
		}
	}
	
	//nor can it figure out the refmap name in this situation
	mixin {
		//you must go through project.rootProject due to a goofy name conflict with LoomGradleExtensionImpl#isRootProject
		defaultRefmapName = "${project.rootProject.name}.refmap.json"
	}
}