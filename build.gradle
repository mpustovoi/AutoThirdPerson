import java.nio.file.Files
import java.nio.file.Path
import java.nio.file.StandardCopyOption

subprojects {
	apply plugin: "java"
	
	java {
		toolchain {
			languageVersion = JavaLanguageVersion.of(17)
		}
	}
	
	tasks.withType(JavaCompile).configureEach {
		it.options.encoding = "UTF-8"
		it.options.release = 17
	}
	
	tasks.withType(GenerateModuleMetadata) {
		//This shit is broke
		enabled = false
	}
	
	processResources {
		inputs.property "version", project.version
		
		filesMatching(["**/fabric.mod.json", "**/mods.toml"]) {
			expand "version": project.version
		}
	}
	
	dependencies {
		//This mf keeps disappearing on me
		implementation "org.jetbrains:annotations:16.0.2"
	}
	
	repositories {
		maven {
			name = "spunchbob"
			url = "https://repo.spongepowered.org/repository/maven-public/"
			content {
				includeGroup "org.spongepowered"
			}
		}
		
		mavenCentral()
	}
}

Path everyJar = project.file("everyJar").toPath()
task("collectJars") {
	setGroup("aaaaaaaaaaaaa")
	setDescription("Copy build artifacts into top-level `everyJar` folder")
	doLast {
		Files.createDirectories(everyJar)
		for(Project p : getSubprojects()) {
			if(p.name.startsWith("Fabric") || p.name.startsWith("Forge")) {
				//look inside build/libs/ directory
				Path libsDir = p.getBuildDir().toPath().resolve("libs")
				if(Files.notExists(libsDir)) continue
				
				//pick the one with the shortest filename (the one without -dev or -sources)
				Files.list(libsDir)
					.sorted(Comparator.comparing(path -> path.toString().length()))
					.findFirst()
					.ifPresent(shortest -> {
						//copy into everyJar directory
						Path dest = everyJar.resolve(shortest.getFileName().toString())
						Files.copy(shortest, dest, StandardCopyOption.REPLACE_EXISTING)
					})
			}
		}
	}
}